import{_ as s,c as n,o as a,N as l}from"./chunks/framework.28867cbe.js";const q=JSON.parse('{"title":"npm 发包 - 配置package.json","description":"","frontmatter":{},"headers":[],"relativePath":"technology/Engineering/npm/npm发包-package配置.md"}'),o={name:"technology/Engineering/npm/npm发包-package配置.md"},p=l(`<h1 id="npm-发包-配置package-json" tabindex="-1">npm 发包 - 配置<code>package.json</code> <a class="header-anchor" href="#npm-发包-配置package-json" aria-label="Permalink to &quot;npm 发包 - 配置\`package.json\`&quot;">​</a></h1><h2 id="_1-配置package-json" tabindex="-1">1. 配置package.json <a class="header-anchor" href="#_1-配置package-json" aria-label="Permalink to &quot;1. 配置package.json&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   1.用于定义package.json文件和该文件所在目录根目录中.js文件和无拓展名文件的处理方式</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   2.目前Node默认的是package.json中没有定义type字段，则按照commonjs规范处理</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   3.node官网建议包的开发者明确指定package.json中type字段的值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   4.无论package.json中的type字段为何值，.mjs的文件都按照es模块来处理，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/** </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    如果需要避免这个包被发布到公共仓库上去，则可以设置为true，如果需要对外发布，则要设置为false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">private</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     执行npm publish 命令时会发布到npm仓库的文件</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">files</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dists</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     使用require 方式引入时，引入的这个文件</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/my-lib.umd.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     使用import * from &#39;XXX&#39; 方式引入时，引入的这个文件</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/my-lib.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    组件ts类型声明文件的入口文件</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/index.d.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    定义外部可访问的资源，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    如果不定义，那么整个发布目录下的资源都可以访问，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    如果定义了，那只能访问定义的资源</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      &quot;.&quot;:{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;import&quot;:&quot;./dist/my-lib.js&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            &quot;require&quot;:&quot;./dist/my-lib.umd.js&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    上面这个配置表示使用import和require方式引入时，分别引入具体的js</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      &quot;./dist/style.css&quot;:&quot;./dist/style.css&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   	上面这个配置表示使用import &#39;xxx/dist/style.css&#39; 时访问的是dist目录下的style.css</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exports</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">import</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/my-lib.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">require</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/my-lib.umd.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">./dist/style.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist/style.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果打包成一个可执行文件cli，那这个就指定这个cli的名称和cli文件的路径</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">npm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./cli.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 提交bug的url和邮箱地址</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bugs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://github.com/owner/project/issues</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">emial</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123@123.com</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,3),t=[p];function e(c,y,r,F,i,D){return a(),n("div",null,t)}const E=s(o,[["render",e]]);export{q as __pageData,E as default};
