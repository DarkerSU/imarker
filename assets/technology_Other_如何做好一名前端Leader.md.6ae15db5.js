import{_ as a,c as e,o as r,N as t}from"./chunks/framework.cd9250a1.js";const b=JSON.parse('{"title":"如何做好一名前端Leader","description":"","frontmatter":{},"headers":[],"relativePath":"technology/Other/如何做好一名前端Leader.md"}'),i={name:"technology/Other/如何做好一名前端Leader.md"},l=t('<h1 id="如何做好一名前端leader" tabindex="-1">如何做好一名前端Leader <a class="header-anchor" href="#如何做好一名前端leader" aria-label="Permalink to &quot;如何做好一名前端Leader&quot;">​</a></h1><p>如何做好一名前端leader？需要聪明绝顶的智商？还是盖世无双的技术？又或者是滔滔不绝的口才？</p><p>我想从<strong>个人角度</strong>、<strong>团队角度</strong>、<strong>公司角度</strong>来思考；</p><h2 id="一、站在个人角度思考" tabindex="-1">一、站在个人角度思考 <a class="header-anchor" href="#一、站在个人角度思考" aria-label="Permalink to &quot;一、站在个人角度思考&quot;">​</a></h2><p>作为一名前端 leader ，技术当然要比同行业大多数人要好，并且懂的要多，无论是产品构思，还是交互设计，还是前端后端，你都需要会一点。 我们深入一下前端需要会哪些？万变不离其宗，前端三大宝剑：HTML，CSS，JavaScript。其它像是三大框架（vue/react/angular），工程化（自动部署/自动化测试/git工作流），小程序，跨平台应用（ReactNative/Flutter/Taro/Uniapp/Eletctron），混合应用（Ionic/cordova），NodeJS（egg/koa/mongodb），Serverless，都是衍生而来的一些扩展方向，你也需要学习。</p><p>这里讲一个学习的小技巧：保持好奇心。</p><p>其实我们人生来就有好奇心，想想小孩子为什么老是会问“为什么”，问问自己难道不想知道地球之外究竟有没有外星人？苹果为什么会掉下来，而不是往天上飞？1＋1为什么就一定要等于2？假如你觉得这些问题很可笑，麻烦了，你在嘲笑的同时也正被大家同情，你丧失的是宝贵的好奇心呀！有了好奇心，牛顿才会思考“苹果为什么会掉下来”这个似乎很傻的问题，最终发现了万有引力的存在。</p><p>所以请保持这个好奇之心吧，它是我们学习、创造的源泉。</p><h2 id="二、站在团队角度思考" tabindex="-1">二、站在团队角度思考 <a class="header-anchor" href="#二、站在团队角度思考" aria-label="Permalink to &quot;二、站在团队角度思考&quot;">​</a></h2><p>一名好的前端leader应该是怎样的？</p><h3 id="促进团队分享氛围" tabindex="-1">促进团队分享氛围 <a class="header-anchor" href="#促进团队分享氛围" aria-label="Permalink to &quot;促进团队分享氛围&quot;">​</a></h3><p>没有分享，就没有现在的互联网，像是这个协议那个协议，这个编程语言那个编程语言。在团队中，我们需要有分享，无论是技术分享还是个人成长方面的分享。 分享会更加促进团队成员的个人成长以及在业务上的开发能力。</p><h3 id="加强团队沟通合作" tabindex="-1">加强团队沟通合作 <a class="header-anchor" href="#加强团队沟通合作" aria-label="Permalink to &quot;加强团队沟通合作&quot;">​</a></h3><p>“一根筷子易折断，十根筷子硬如铁”。</p><p>我们可以使用一些软体，如 tapd 来管理项目，为团体成员分配任务，把控项目进度以及收集一些问题。</p><p>团队成员之间要加强沟通，有时候可能一个问题会困扰你一整天，这个时候你花个几分钟询问下其他人，可能就解决了，这个我深有体会。大家都是需要互相学习的，没有谁是什么都会，什么都比别人强的，面子什么的不存在的。</p><h3 id="制定计划分配任务" tabindex="-1">制定计划分配任务 <a class="header-anchor" href="#制定计划分配任务" aria-label="Permalink to &quot;制定计划分配任务&quot;">​</a></h3><p>划分阶段性的目标，细分每个目标的子项，根据优先级以及团队成员的特点去分配。</p><p>假设我们有一个定制table组件类库的需求，团体成员有两个人，一个 Javascript更好，一个编写css动画更好，我肯定会安排JavaScript好的同事来接这个需求。前提我得对我的组员有更多的了解。</p><p>同时，为了避免“单点故障”，a同事离职，b同事接手a同事的项目/模块，这就会让人措手不及，一方面项目交接过程会拉长，另一方面其他成员上下文切换的成本也很高。</p><p>解决的方法是让尽可能多的成员交叉参与不同模块，不同项目的开发，可以配合Review等手段让团队成员都可以熟悉项目的代码。</p><h3 id="搞好基建提高效率" tabindex="-1">搞好基建提高效率 <a class="header-anchor" href="#搞好基建提高效率" aria-label="Permalink to &quot;搞好基建提高效率&quot;">​</a></h3><ul><li>基础UI组件库</li><li>自建Gitlab</li><li>版本管理</li><li>自动编译发布Jenkins</li><li>统一脚手架</li><li>Node中间层</li><li>埋点系统</li><li>监控和报警系统</li><li>安全管理</li><li>Eslint</li><li>Mock</li><li>灰度发布</li><li>oidc单点登录</li><li>Swagger接口自动生成</li><li>文档平台建设</li></ul><h2 id="三、站在公司角度思考" tabindex="-1">三、站在公司角度思考 <a class="header-anchor" href="#三、站在公司角度思考" aria-label="Permalink to &quot;三、站在公司角度思考&quot;">​</a></h2><p>一名好的前端leader应该是怎样的？</p><h3 id="保持项目稳定" tabindex="-1">保持项目稳定 <a class="header-anchor" href="#保持项目稳定" aria-label="Permalink to &quot;保持项目稳定&quot;">​</a></h3><p>定期Code Review，发现并解决问题，带领团队成员攻克难点。完善埋点系统，供运营去分析数据，持续改进加强用户体验。完善监控报警系统，快速定位发现线上问题。完善版本管理系统，自动构建工具，脚本。完善编码规范，加上各种lint，以及类型检查typescript。编写测试用例：针对通用类库和公共UI组件库。</p><h3 id="创造更大价值" tabindex="-1">创造更大价值 <a class="header-anchor" href="#创造更大价值" aria-label="Permalink to &quot;创造更大价值&quot;">​</a></h3><p>“戴商业的眼镜”来写项目，充分发挥项目价值以及发现扩展方向。带好团队成员，发现他们各自的优点，合理分配。</p><h2 id="四、总结" tabindex="-1">四、总结 <a class="header-anchor" href="#四、总结" aria-label="Permalink to &quot;四、总结&quot;">​</a></h2><p>上面我主要写了对于“如何做好一名前端leader”的想法，分别从个人、团队和公司的角度概述了自己的观点，有点笼统，</p>',31),o=[l];function n(d,h,p,s,c,_){return r(),e("div",null,o)}const q=a(i,[["render",n]]);export{b as __pageData,q as default};
