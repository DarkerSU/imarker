import{_ as t,c as e,o as d,N as a}from"./chunks/framework.28867cbe.js";const j=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"technology/React/Nexj.js/Next.js开发指南-目录说明.md"}'),o={name:"technology/React/Nexj.js/Next.js开发指南-目录说明.md"},r=a('<p>本页面提供 Next.js 项目的文件和文件夹结构概述。它涵盖了顶层文件和文件夹、配置文件以及应用程序和页面目录中的路由约定。</p><h2 id="顶层文件夹" tabindex="-1">顶层文件夹 <a class="header-anchor" href="#顶层文件夹" aria-label="Permalink to &quot;顶层文件夹&quot;">​</a></h2><p>文件夹名 说明 app 应用程序路由 pages 页面路由 public 静态资源文件夹 src 可选的应用程序源代码文件夹</p><h2 id="顶层文件" tabindex="-1">顶层文件 <a class="header-anchor" href="#顶层文件" aria-label="Permalink to &quot;顶层文件&quot;">​</a></h2><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>Next.js</td><td>Next.js 运行时文件</td></tr><tr><td>next.config.js</td><td>Next.js 的配置文件</td></tr><tr><td>package.json</td><td>项目依赖和脚本</td></tr><tr><td>instrumentation.ts</td><td>OpenTelemetry 和 Instrumentation 文件</td></tr><tr><td>middleware.ts</td><td>Next.js 请求中间件</td></tr><tr><td>.env</td><td>环境变量</td></tr><tr><td>.env.local</td><td>本地环境变量</td></tr><tr><td>.env.production</td><td>生产环境变量</td></tr><tr><td>.env.development</td><td>开发环境变量</td></tr><tr><td>.eslintrc.json</td><td>ESLint 的配置文件</td></tr><tr><td>.gitignore</td><td>Git 忽略的文件和文件夹</td></tr><tr><td>next-env.d.ts</td><td>Next.js 的 TypeScript 声明文件</td></tr><tr><td>tsconfig.json</td><td>TypeScript 的配置文件</td></tr><tr><td>jsconfig.json</td><td>JavaScript 的配置文件</td></tr></tbody></table><h2 id="app-路由约定" tabindex="-1">app 路由约定 <a class="header-anchor" href="#app-路由约定" aria-label="Permalink to &quot;app 路由约定&quot;">​</a></h2><h3 id="路由文件" tabindex="-1">路由文件 <a class="header-anchor" href="#路由文件" aria-label="Permalink to &quot;路由文件&quot;">​</a></h3><table><thead><tr><th>文件名</th><th>扩展名</th><th>说明</th></tr></thead><tbody><tr><td>layout</td><td>.js .jsx .tsx</td><td>布局</td></tr><tr><td>page</td><td>.js .jsx .tsx</td><td>页面</td></tr><tr><td>loading</td><td>.js .jsx .tsx</td><td>加载界面</td></tr><tr><td>not-found</td><td>.js .jsx .tsx</td><td>未找到界面</td></tr><tr><td>error</td><td>.js .jsx .tsx</td><td>错误界面</td></tr><tr><td>global-error</td><td>.js .jsx .tsx</td><td>全局错误界面</td></tr><tr><td>route</td><td>.js .ts</td><td>API 端点</td></tr><tr><td>template</td><td>.js .jsx .tsx</td><td>重新渲染的布局</td></tr><tr><td>default</td><td>.js .jsx .tsx</td><td>并行路由回退页面</td></tr></tbody></table><h3 id="嵌套路由" tabindex="-1">嵌套路由 <a class="header-anchor" href="#嵌套路由" aria-label="Permalink to &quot;嵌套路由&quot;">​</a></h3><ul><li>使用文件夹表示路由片段</li></ul><h3 id="动态路由" tabindex="-1">动态路由 <a class="header-anchor" href="#动态路由" aria-label="Permalink to &quot;动态路由&quot;">​</a></h3><ul><li><code>[folder]</code> 表示动态路由片段</li><li><code>[...folder]</code> 表示匹配所有路由片段</li><li><code>[[...folder]]</code> 表示可选匹配所有路由片段</li></ul><h3 id="路由组和私有文件夹" tabindex="-1">路由组和私有文件夹 <a class="header-anchor" href="#路由组和私有文件夹" aria-label="Permalink to &quot;路由组和私有文件夹&quot;">​</a></h3><ul><li><code>(folder)</code> 表示路由组，不影响路由</li><li><code>_folder</code> 表示私有文件夹，不参与路由</li></ul><h3 id="并行和拦截路由" tabindex="-1">并行和拦截路由 <a class="header-anchor" href="#并行和拦截路由" aria-label="Permalink to &quot;并行和拦截路由&quot;">​</a></h3><ul><li><code>@folder</code> 表示命名插槽</li><li><code>(.)folder</code> 表示拦截同级路由</li><li><code>(..)folder</code> 表示拦截上一级路由</li><li><code>(..)(..)folder</code> 表示拦截上两级路由</li><li><code>(...)folder</code> 表示从根目录拦截</li></ul><h3 id="元数据文件约定" tabindex="-1">元数据文件约定 <a class="header-anchor" href="#元数据文件约定" aria-label="Permalink to &quot;元数据文件约定&quot;">​</a></h3><h4 id="app-图标" tabindex="-1">App 图标 <a class="header-anchor" href="#app-图标" aria-label="Permalink to &quot;App 图标&quot;">​</a></h4><ul><li><code>favicon.ico</code> 表示网站图标文件</li><li><code>icon.ico</code> <code>.jpg</code> <code>.jpeg</code> <code>.png</code> <code>.svg</code> 表示应用程序图标文件</li><li><code>icon.js .ts .tsx</code> 表示生成的应用程序图标文件</li><li><code>apple-icon.jpg .jpeg .png</code> 表示苹果应用程序图标文件</li><li><code>apple-icon.js .ts .tsx</code> 表示生成的苹果应用程序图标文件</li></ul><h4 id="open-graph-和-twitter-图像" tabindex="-1">Open Graph 和 Twitter 图像 <a class="header-anchor" href="#open-graph-和-twitter-图像" aria-label="Permalink to &quot;Open Graph 和 Twitter 图像&quot;">​</a></h4><ul><li><code>opengraph-image.jpg .jpeg .png .gif</code> 表示 Open Graph 图像文件</li><li><code>opengraph-image.js .ts .tsx</code> 表示生成的 Open Graph 图像文件</li><li><code>twitter-image.jpg .jpeg .png .gif</code> 表示 Twitter 图像文件</li><li><code>twitter-image.js .ts .tsx</code> 表示生成的 Twitter 图像文件</li></ul><h4 id="seo" tabindex="-1">SEO <a class="header-anchor" href="#seo" aria-label="Permalink to &quot;SEO&quot;">​</a></h4><ul><li><code>sitemap.xml</code> 表示网站地图文件</li><li><code>sitemap.js .ts</code> 表示生成的网站地图文件</li><li><code>robots.txt</code> 表示 Robots 文件</li><li><code>robots.js .ts</code> 表示生成的 Robots 文件</li></ul><h2 id="pages-路由约定" tabindex="-1">pages 路由约定 <a class="header-anchor" href="#pages-路由约定" aria-label="Permalink to &quot;pages 路由约定&quot;">​</a></h2><h3 id="特殊文件" tabindex="-1">特殊文件 <a class="header-anchor" href="#特殊文件" aria-label="Permalink to &quot;特殊文件&quot;">​</a></h3><ul><li><code>_app.js .jsx .tsx</code> 表示自定义 App</li><li><code>_document.js .jsx .tsx</code> 表示自定义 Document</li><li><code>_error.js .jsx .tsx</code> 表示自定义错误页面</li><li><code>404.js .jsx .tsx</code> 表示404错误页面</li><li><code>500.js .jsx .tsx</code> 表示500错误页面</li></ul><h3 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h3><ul><li>使用文件夹和文件的命名约定来表示路由</li></ul><p>以上是 Next.js 项目结构的概述。</p>',29),l=[r];function i(s,c,n,h,p,x){return d(),e("div",null,l)}const b=t(o,[["render",i]]);export{j as __pageData,b as default};
