import{_ as s,c as a,o as n,N as e}from"./chunks/framework.28867cbe.js";const _=JSON.parse('{"title":"d.ts 声明文件","description":"","frontmatter":{},"headers":[],"relativePath":"technology/TypeScript/Basic/声明文件.md"}'),l={name:"technology/TypeScript/Basic/声明文件.md"},p=e(`<h1 id="d-ts-声明文件" tabindex="-1">d.ts 声明文件 <a class="header-anchor" href="#d-ts-声明文件" aria-label="Permalink to &quot;d.ts 声明文件&quot;">​</a></h1><h2 id="声明文件-declare" tabindex="-1">声明文件 declare <a class="header-anchor" href="#声明文件-declare" aria-label="Permalink to &quot;声明文件 declare&quot;">​</a></h2><p>当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> var 声明全局变量</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">声明全局方法</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> class 声明全局类</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> enum 声明全局枚举类型</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> namespace 声明（含有子属性的）全局对象</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> module 声明模块</span></span>
<span class="line"><span style="color:#FFCB6B;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">和</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">声明全局类型</span></span>
<span class="line"><span style="color:#FFCB6B;">///</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">reference</span><span style="color:#A6ACCD;"> /</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">三斜线指令</span></span>
<span class="line"></span></code></pre></div>`,4),o=[p];function t(c,r,C,i,d,A){return n(),a("div",null,o)}const D=s(l,[["render",t]]);export{_ as __pageData,D as default};
